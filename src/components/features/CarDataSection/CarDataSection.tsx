import React from 'react';
import { CarDataSectionProps } from '../../../types';

const CarDataSection: React.FC<CarDataSectionProps> = ({ 
  car, 
  cars, 
  onAddCarData, 
  onEditCar
}) => {
  const currentCar = cars.find(c => c.id === car.id) || car;

  // –û–±—ä–µ–¥–∏–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –æ–¥–∏–Ω –º–∞—Å—Å–∏–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const allDataItems = [
    // –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ–ª—è
    { id: 'brand', name: '–ú–∞—Ä–∫–∞', value: currentCar.brand, isStatic: true },
    { id: 'model', name: '–ú–æ–¥–µ–ª—å', value: currentCar.model, isStatic: true },
    { id: 'year', name: '–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞', value: currentCar.year.toString(), isStatic: true },
    ...(currentCar.engineType ? [
      { 
        id: 'engineType', 
        name: '–î–≤–∏–≥–∞—Ç–µ–ª—å', 
        value: 
          currentCar.engineType === 'petrol' ? '–ë–µ–Ω–∑–∏–Ω' :
          currentCar.engineType === 'diesel' ? '–î–∏–∑–µ–ª—å' :
          currentCar.engineType === 'electric' ? '–≠–ª–µ–∫—Ç—Ä–æ' :
          currentCar.engineType === 'hybrid' ? '–ì–∏–±—Ä–∏–¥' : '–î—Ä—É–≥–æ–π',
        isStatic: true 
      }
    ] : []),
    ...(currentCar.transmission ? [
      { 
        id: 'transmission', 
        name: '–ö–æ—Ä–æ–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á', 
        value: 
          currentCar.transmission === 'manual' ? '–ú–ö–ü–ü' :
          currentCar.transmission === 'automatic' ? '–ê–ö–ü–ü' :
          currentCar.transmission === 'cvt' ? '–í–∞—Ä–∏–∞—Ç–æ—Ä' : '–î—Ä—É–≥–∞—è',
        isStatic: true 
      }
    ] : []),
    ...(currentCar.vin ? [
      { id: 'vin', name: 'VIN-–∫–æ–¥', value: currentCar.vin, isStatic: true }
    ] : [])
  ];

  return (
    <div className="section">
      {/* –ó–ê–ì–û–õ–û–í–û–ö –° –ö–ù–û–ü–ö–ê–ú–ò */}
      <div className="section__header">
        <h2 className="section__title">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–≤—Ç–æ–º–æ–±–∏–ª–µ</h2>
        <div className="section__header-actions">
          <button 
            className="section__action-button section__action-button--edit"
            onClick={() => onEditCar(currentCar)}
            type="button"
            title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å"
          >
            <svg className="section__action-icon" viewBox="0 0 24 24" fill="none">
              <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7" stroke="currentColor" strokeWidth="2"/>
              <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z" stroke="currentColor" strokeWidth="2"/>
            </svg>
          </button>
          <button 
            className="section__action-button section__action-button--add"
            onClick={onAddCarData}
            type="button"
            title="–î–æ–±–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ"
          >
            <svg className="section__action-icon" viewBox="0 0 24 24" fill="none">
              <path d="M12 5v14m-7-7h14" stroke="currentColor" strokeWidth="2" strokeLinecap="round"/>
            </svg>
          </button>
        </div>
      </div>

      {/* –û–°–ù–û–í–ù–û–ô –ö–û–ù–¢–ï–ù–¢ */}
      <div className="section__content">
        <div className="section__grid">
          {/* –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è */}
          {allDataItems.map((item) => (
            <div key={item.id} className="section__grid-item">
              <span className="section__grid-label">{item.name}</span>
              <span className="section__grid-value">{item.value}</span>
            </div>
          ))}
          
          {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ carData */}
          {currentCar.carData && currentCar.carData.map((dataEntry) => 
            dataEntry.fields.map((field, index) => (
              <div key={`${dataEntry.id}-${index}`} className="section__grid-item">
                <span className="section__grid-label">{field.name}</span>
                <span className="section__grid-value">
                  {field.value} {field.unit && ` ${field.unit}`}
                </span>
              </div>
            ))
          )}
        </div>

        {/* –°–æ–æ–±—â–µ–Ω–∏–µ –µ—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤–æ–æ–±—â–µ */}
        {allDataItems.length === 0 && (!currentCar.carData || currentCar.carData.length === 0) && (
          <div className="section__empty">
            <div className="section__empty-icon">üöó</div>
            <p className="section__empty-text">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ–± –∞–≤—Ç–æ–º–æ–±–∏–ª–µ</p>
            <p className="section__empty-subtext">
              –î–æ–±–∞–≤—å—Ç–µ –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è
            </p>
          </div>
        )}
      </div>
    </div>
  );
};

export default CarDataSection;